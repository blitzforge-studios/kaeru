import {
    SlashCommandBuilder,
    CommandInteraction,
    MessageFlags,
} from "discord.js";

interface CommandExecuteParams {
    interaction: CommandInteraction;
    client: any;
}

export default {
    data: new SlashCommandBuilder()
        .setName("ping")
        .setDescription("Botun gecikme s√ºresini g√∂sterir."),

    execute: async ({ interaction, client }: CommandExecuteParams) => {
        try {
            // Ba≈ülangƒ±√ß zamanƒ±nƒ± kaydet
            const startTime = Date.now();

            // ƒ∞lk mesajƒ± g√∂nder
            const sent = await interaction.reply({
                content: "üèì Ping hesaplanƒ±yor...",
                withResponse: true,
            });

            // Gecikme s√ºrelerini hesapla
            const roundTripLatency = Date.now() - startTime;
            const wsLatency = client.ws.ping;

            // Mesajƒ± g√ºncelle
            await interaction.editReply({
                content: [
                    "üèì **Pong!**",
                    `> **Bot Gecikmesi:** \`${roundTripLatency}ms\``,
                    `> **WebSocket Gecikmesi:** \`${wsLatency}ms\``,
                ].join("\n"),
            });
        } catch (error) {
            console.error("[Ping Command]", {
                error: error instanceof Error ? error.message : error,
                timestamp: new Date().toISOString(),
            });

            await interaction.reply({
                content: "‚ùå Ping hesaplanƒ±rken bir hata olu≈ütu!",
                flags: MessageFlags.Ephemeral,
            });
        }
    },
};
